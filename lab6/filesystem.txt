Krishna Karki
Student ID: 984802


1. Use mkfs to create a file system with a block size of 64 bytes and having a total of 8 blocks. How many index nodes will fit in a block? How many directory entries will fit in a block? Use dump to examine the file system backing file, and note the value in byte 64. What does this value represent? Use mkdir to create a directory (e.g., /usr), and then use dump to examine byte 64 again. What do you notice? Repeat the process of creating a directory (e.g., /bin, /lib, /var, /etc, /home, /mnt, etc.) and examining with dump. How many directories can you create before you fill up the file system? Explain why.
ANS:

C:\moss\filesystem>java mkfs myfile.dat 64 8
block_size: 64
blocks: 8
super_blocks: 1
free_list_blocks: 1
inode_blocks: 3
data_blocks: 3
block_total: 8

Each inode contains 64 bytes so only one inode fit in a block because block size is usually 64 bytes. 4 directory entries will fit in a block beacuse directory entries usually 16 bytes and the block size is 64 bytes.
--------------------------------------------------------
C:\moss\filesystem>java dump myfile.dat
1 40 64 @
5 8 8
9 1 1
13 2 2
17 5 5
64 1 1
128 40 64 @
131 3 3
139 20 32
143 ff 255
144 ff 255
145 ff 255
146 ff 255
147 ff 255
148 ff 255
149 ff 255
150 ff 255
151 ff 255
152 ff 255
153 ff 255
154 ff 255
155 ff 255
156 ff 255
157 ff 255
158 ff 255
159 ff 255
160 ff 255
161 ff 255
162 ff 255
163 ff 255
164 ff 255
165 ff 255
166 ff 255
167 ff 255
168 ff 255
169 ff 255
322 2e 46 .
338 2e 46 .
339 2e 46 .

The 64 byte value in : 64 1 1 which has 1 hex and 1 decimal value
-----------------------------------------------------------------

C:\MOSS\filesys>java mkdir /usr
C:\MOSS\filesys>java dump filesys.dat
1 40 64 @
5 8 8
9 1 1
13 2 2
17 5 5
64 3 3
128 40 64 @
131 3 3
139 30 48 0
143 ff 255
144 ff 255
145 ff 255
146 ff 255
147 ff 255
148 ff 255
149 ff 255
150 ff 255
151 ff 255
152 ff 255
153 ff 255
154 ff 255
155 ff 255
156 ff 255
157 ff 255
158 ff 255
159 ff 255
160 ff 255
161 ff 255
162 ff 255
163 ff 255
164 ff 255
165 ff 255
166 ff 255
167 ff 255
168 ff 255
169 ff 255
192 40 64 @
195 1 1
203 20 32
206 1 1
207 ff 255
208 ff 255
209 ff 255
210 ff 255
211 ff 255
212 ff 255
213 ff 255
214 ff 255
215 ff 255
216 ff 255
217 ff 255
218 ff 255
219 ff 255
220 ff 255
221 ff 255
222 ff 255
223 ff 255
224 ff 255
225 ff 255
226 ff 255
227 ff 255
228 ff 255
229 ff 255
230 ff 255
231 ff 255
232 ff 255
233 ff 255
322 2e 46 .
338 2e 46 .
339 2e 46 .
353 1 1
354 75 117 u
355 73 115 s
356 72 114 r
385 1 1
386 2e 46 .
402 2e 46 .
403 2e 46 .


Creating a subdirectory called usr adds further information to the data fields.
The final superblock byte becomes: 64 3 3

-----------------------------------------------------

C:\MOSS\filesystem>java mkdir /bin
C:\MOSS\filesystem>java dump filesys.dat
1 40 64 @
5 8 8
9 1 1
13 2 2
17 5 5
64 7 7
128 40 64 @
131 3 3
139 40 64 @
143 ff 255
144 ff 255
145 ff 255

The final superblock byte becomes: 64 7 7


C:\MOSS\filesys>java mkdir /lib
mkdir: No space left on device
mkdir: "/lib"


2. Enhance ls.java to display for each file the uid and gid as decimal numbers, and the 9 low-order bits of mode as a 3-digit octal number (i.e., 000..777).
ANS:
Please look at the attached file ls.java

